groups:
  - name: golden_signals_alerts
    rules:
      # =====================================================
      # 1. LATENCY ALERTS (Golden Signal #1)
      # =====================================================
      - alert: HighLatencyP99
        expr: histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
          golden_signal: latency
          team: backend
        annotations:
          summary: "High P99 latency detected"
          description: "P99 latency is {{ $value }}s, above 2s threshold for service {{ $labels.service }}"
          runbook_url: "https://wiki.company.com/runbooks/high-latency"
      
      - alert: CriticalLatencyP99
        expr: histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[5m])) > 5
        for: 2m
        labels:
          severity: critical
          golden_signal: latency
          team: backend
        annotations:
          summary: "CRITICAL: Extremely high P99 latency"
          description: "P99 latency is {{ $value }}s, above 5s critical threshold"
          
      # =====================================================
      # 2. TRAFFIC ALERTS (Golden Signal #2)
      # =====================================================
      - alert: TrafficDropSignificant
        expr: sum(rate(http_requests_total[5m])) < 0.1
        for: 10m
        labels:
          severity: warning
          golden_signal: traffic
          team: backend
        annotations:
          summary: "Significant traffic drop detected"
          description: "Request rate is {{ $value }} req/s, below expected threshold"
          
      - alert: NoTraffic
        expr: sum(rate(http_requests_total[5m])) == 0
        for: 5m
        labels:
          severity: critical
          golden_signal: traffic
          team: backend
        annotations:
          summary: "No traffic detected - service may be down"
          description: "No HTTP requests received in the last 5 minutes"
          
      - alert: TrafficSpike
        expr: sum(rate(http_requests_total[5m])) > 100
        for: 2m
        labels:
          severity: warning
          golden_signal: traffic
          team: backend
        annotations:
          summary: "Unusual traffic spike detected"
          description: "Request rate is {{ $value }} req/s, significantly higher than normal"
      
      # =====================================================
      # 3. ERROR RATE ALERTS (Golden Signal #3)
      # =====================================================
      - alert: HighErrorRate
        expr: (rate(http_errors_total[5m]) / rate(http_requests_total[5m])) > 0.05
        for: 5m
        labels:
          severity: warning
          golden_signal: errors
          team: backend
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }}, above 5% threshold"
          
      - alert: CriticalErrorRate
        expr: (rate(http_errors_total[5m]) / rate(http_requests_total[5m])) > 0.1
        for: 2m
        labels:
          severity: critical
          golden_signal: errors
          team: backend
        annotations:
          summary: "CRITICAL: Very high error rate"
          description: "Error rate is {{ $value | humanizePercentage }}, above 10% critical threshold"
      
      - alert: ConsecutiveErrors
        expr: increase(http_errors_total[1m]) > 10
        for: 1m
        labels:
          severity: warning
          golden_signal: errors
          team: backend
        annotations:
          summary: "Multiple consecutive errors"
          description: "{{ $value }} errors in the last minute"
      
      # =====================================================
      # 4. SATURATION ALERTS (Golden Signal #4)
      # =====================================================
      - alert: HighCPUUsage
        expr: rate(backend_process_cpu_user_seconds_total[5m]) * 100 > 80
        for: 10m
        labels:
          severity: warning
          golden_signal: saturation
          team: backend
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is {{ $value }}%, above 80% for 10 minutes"
          
      - alert: CriticalCPUUsage
        expr: rate(backend_process_cpu_user_seconds_total[5m]) * 100 > 95
        for: 5m
        labels:
          severity: critical
          golden_signal: saturation
          team: backend
        annotations:
          summary: "CRITICAL: Extremely high CPU usage"
          description: "CPU usage is {{ $value }}%, above 95% critical threshold"
      
      - alert: HighMemoryUsage
        expr: (backend_nodejs_heap_used_bytes / backend_nodejs_heap_size_total_bytes) * 100 > 85
        for: 10m
        labels:
          severity: warning
          golden_signal: saturation
          team: backend
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is {{ $value }}%, above 85% threshold"
          
      - alert: MemoryLeak
        expr: increase(backend_nodejs_heap_used_bytes[1h]) > 100000000  # 100MB growth in 1h
        for: 0m
        labels:
          severity: warning
          golden_signal: saturation
          team: backend
        annotations:
          summary: "Potential memory leak detected"
          description: "Memory usage increased by {{ $value | humanizeBytes }} in the last hour"

  - name: business_metrics_alerts
    rules:
      # =====================================================
      # BUSINESS METRICS ALERTS
      # =====================================================
      - alert: HighOrderFailureRate
        expr: (rate(orders_failed_total[5m]) / (rate(orders_created_total[5m]) + rate(orders_failed_total[5m]))) > 0.1
        for: 5m
        labels:
          severity: critical
          category: business
          team: product
        annotations:
          summary: "High order failure rate affecting revenue"
          description: "Order failure rate is {{ $value | humanizePercentage }}, above 10% threshold"
          impact: "Revenue loss and customer experience degradation"
          
      - alert: NoOrdersCreated
        expr: rate(orders_created_total[15m]) == 0
        for: 15m
        labels:
          severity: warning
          category: business
          team: product
        annotations:
          summary: "No orders created in 15 minutes"
          description: "Order creation has stopped completely"
          impact: "Complete revenue halt"
          
      - alert: OrderValueDrop
        expr: avg_over_time(rate(order_value_dollars[30m])) < 20
        for: 30m
        labels:
          severity: warning
          category: business
          team: product
        annotations:
          summary: "Average order value dropped significantly"
          description: "Average order value is ${{ $value }}, below $20 threshold"
          
      - alert: LowUserSignups
        expr: rate(user_signups_total[1h]) < 0.01  # Less than 1 signup per hour
        for: 1h
        labels:
          severity: warning
          category: business
          team: growth
        annotations:
          summary: "User signup rate is very low"
          description: "Only {{ $value }} signups per hour, below expected rate"

  - name: frontend_alerts
    rules:
      # =====================================================
      # FRONTEND SPECIFIC ALERTS
      # =====================================================
      - alert: HighPageLoadTime
        expr: avg(browser_page_load_time) > 3000  # 3 seconds
        for: 5m
        labels:
          severity: warning
          category: frontend
          team: frontend
        annotations:
          summary: "High page load times detected"
          description: "Average page load time is {{ $value }}ms, above 3s threshold"
          
      - alert: LowCorWebVitalsScore
        expr: avg(browser_core_web_vitals_lcp) < 2.5  # LCP should be under 2.5s
        for: 10m
        labels:
          severity: warning
          category: frontend
          team: frontend
        annotations:
          summary: "Poor Core Web Vitals performance"
          description: "LCP score is {{ $value }}s, above 2.5s good threshold"
          
      - alert: JavaScriptErrors
        expr: rate(browser_javascript_errors_total[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          category: frontend
          team: frontend
        annotations:
          summary: "High JavaScript error rate"
          description: "JS error rate is {{ $value }} errors/sec"

  - name: mobile_alerts  
    rules:
      # =====================================================
      # MOBILE APP SPECIFIC ALERTS
      # =====================================================
      - alert: HighMobileAppCrashRate
        expr: (rate(mobile_crashes_total[5m]) / rate(mobile_app_launches_total[5m])) > 0.02
        for: 5m
        labels:
          severity: critical
          category: mobile
          team: mobile
        annotations:
          summary: "High mobile app crash rate"
          description: "Mobile crash rate is {{ $value | humanizePercentage }}, above 2% threshold"
          
      - alert: MobileAPITimeout
        expr: avg(mobile_api_request_duration) > 5000  # 5 seconds
        for: 5m
        labels:
          severity: warning
          category: mobile
          team: mobile
        annotations:
          summary: "Mobile API requests timing out"
          description: "Average mobile API response time is {{ $value }}ms"
          
      - alert: LowMobileAppUsage
        expr: rate(mobile_screen_views_total[1h]) < 1
        for: 1h
        labels:
          severity: warning
          category: mobile
          team: mobile
        annotations:
          summary: "Low mobile app usage detected"
          description: "Mobile screen views are {{ $value }} per hour, unusually low"

  - name: sli_slo_alerts
    rules:
      # =====================================================
      # SLI/SLO BASED ALERTS
      # =====================================================
      - alert: SLOErrorBudgetBurnRateFast
        expr: (
          sli:availability:ratio_rate5m < (1 - 14.4 * slo:availability_target)
          and
          sli:availability:ratio_rate1h < (1 - 14.4 * slo:availability_target)
        )
        for: 2m
        labels:
          severity: critical
          category: slo
          team: sre
        annotations:
          summary: "Fast SLO error budget burn rate"
          description: "Error budget will be exhausted in < 6 hours at current rate"
          
      - alert: SLOErrorBudgetBurnRateSlow
        expr: (
          sli:availability:ratio_rate30m < (1 - 6 * slo:availability_target)
          and 
          sli:availability:ratio_rate6h < (1 - 6 * slo:availability_target)
        )
        for: 15m
        labels:
          severity: warning
          category: slo
          team: sre
        annotations:
          summary: "Slow SLO error budget burn rate"
          description: "Error budget will be exhausted in < 3 days at current rate"

  - name: infrastructure_alerts
    rules:
      # =====================================================
      # INFRASTRUCTURE & KUBERNETES ALERTS
      # =====================================================
      - alert: PodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
        for: 0m
        labels:
          severity: warning
          category: infrastructure
          team: sre
        annotations:
          summary: "Pod is crash looping"
          description: "Pod {{ $labels.pod }} is restarting frequently"
          
      - alert: HighPodMemoryUsage
        expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) > 0.9
        for: 5m
        labels:
          severity: warning
          category: infrastructure
          team: sre
        annotations:
          summary: "Pod memory usage is high"
          description: "Pod {{ $labels.pod }} memory usage is {{ $value | humanizePercentage }}"
          
      - alert: PodNotReady
        expr: kube_pod_status_ready{condition="false"} == 1
        for: 10m
        labels:
          severity: warning
          category: infrastructure
          team: sre
        annotations:
          summary: "Pod not ready"
          description: "Pod {{ $labels.pod }} has been not ready for more than 10 minutes"